#pragma once
#if !defined( __RHI_VERTEX_BUFFER__ )
#define __RHI_VERTEX_BUFFER__

/************************************************************************/
/*                                                                      */
/* INCLUDE                                                              */
/*                                                                      */
/************************************************************************/
#include "Engine/Renderer/RHI/dx11.hpp"

#include "Engine/Renderer/Vertex3.hpp"
#include "Engine/Core/Types.hpp"


/************************************************************************/
/*                                                                      */
/* DEFINES AND CONSTANTS                                                */
/*                                                                      */
/************************************************************************/

/************************************************************************/
/*                                                                      */
/* MACROS                                                               */
/*                                                                      */
/************************************************************************/

/************************************************************************/
/*                                                                      */
/* TYPES                                                                */
/*                                                                      */
/************************************************************************/
class RHIDevice;
class RHIDeviceContext;

/************************************************************************/
/*                                                                      */
/* STRUCTS                                                              */
/*                                                                      */
/************************************************************************/

/************************************************************************/
/*                                                                      */
/* CLASSES                                                              */
/*                                                                      */
/************************************************************************/
//------------------------------------------------------------------------
class VertexBuffer
	{
	public:
		VertexBuffer(RHIDevice *owner,
			Vertex3F const *vertices,
			uint const vertexCount,
			BufferUsage usage = BUFFERUSAGE_STATIC);
		~VertexBuffer();

		inline bool isValid() const { return (m_dxBuffer != nullptr); }
		void update(RHIDeviceContext *context, Vertex3F const* data, uint const count);

	public:
		bool create(RHIDevice *device, Vertex3F const *data, uint const count);

		ID3D11Buffer *m_dxBuffer;
		uint m_bufferSize;
		BufferUsage m_usage;
	};

/************************************************************************/
/*                                                                      */
/* GLOBAL VARIABLES                                                     */
/*                                                                      */
/************************************************************************/

/************************************************************************/
/*                                                                      */
/* FUNCTION PROTOTYPES                                                  */
/*                                                                      */
/************************************************************************/
#endif 
